#include <bits/stdc++.h>
#include <iostream>
#include <utility>
using namespace std;

struct Node{

    int data;
    Node* next;


    Node(int val){
        data = val;
        next = NULL;
    }


};

Node* ConvertArrayLL(vector <int> arr){
    Node* head = new Node(arr[0]);
    Node* mover = head;
    for(int i=1; i<arr.size(); i++){
        Node* temp = new Node(arr[i]);
        mover->next = temp;
        mover = temp;
        
    }

    return head;
}


void print(Node* head){
    Node* temp = head;
    while(temp != NULL){
        cout<<temp->data<<" ";
        temp = temp->next;
    }

      
}


Node* ReverseLL(Node* head){

    Node* prev = NULL;
    Node* temp = head;
    
    while(temp != NULL){
        Node* front = temp->next;
        temp->next = prev;
        prev = temp;
        temp = front;
        
    }
    return prev;  // Prev is the current head;
}


Node* ReverseLLrecursion(Node* head){
    if(head == NULL || head->next == NULL){
        return head;
    }
    else{
        Node* newhead = ReverseLLrecursion(head->next);
        Node* front = head->next;
        front->next = head;
        head->next = NULL;

        return newhead;
    }
}



int main(){
     vector<int> arr = {1, 2, 3, 4, 5};
     Node* head = ConvertArrayLL(arr);
    //   head = ReverseLL(head);
    head = ReverseLLrecursion(head);
      print(head);

    
    return 0;
}
