#include <bits/stdc++.h>
#include <iostream>
#include <utility>
using namespace std;

//----------------------------------------------Brute Force------------------------------------->

int SumK(vector <int> &arr, int n, int k){
    int length = 0;
    for(int i = 0; i,n; i++){
        int sum = 0;
        for(int j = i; j<n; j++){

            sum += arr[j];

            if(sum == k){

                length = max(length, j-i+1);

            }

        }
    }
    return length;
    
}



//----------------------------------------Better Sol ( Positives and negetives)

int SumK2(vector <int> &arr, int n, int k){
    map<int, int> PrefixMap;
    int sum = 0;
    int maxLen = 0;
    for (int i = 0 ; i<n; i++){
        sum = sum+arr[i];
        if(sum == k){
            maxLen = max(maxLen, i+1);
        }

        int rem = sum - k;
        if(PrefixMap.find(rem)  != PrefixMap.end()){
            int len =  i - PrefixMap[sum];
            maxLen = max(maxLen, len);
        }

        if(PrefixMap.find(sum) == PrefixMap.end()){
            PrefixMap[sum] = i;
        }
    }

    return maxLen;
}


//---------------------------------->Optimal solution ( zeroes and positives)

int Sum3(vector <int> &arr, int n, int k){

    int right = 0;
    int left = 0;
    int len = 0;
    int sum = arr[0];
    while (right < n){

        while(left <= right && sum>k){
            sum -= arr[left ];
            left++;

        }

        if(sum == k){
            len = max(len, (right - left) + 1);
        }
        right ++;
        if(right <n){
            sum += arr[right];
        }
    }


}


int main(){
    
    return 0;
}
